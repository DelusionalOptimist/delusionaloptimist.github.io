<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cloud on DelusionalOptimist</title><link>https://delusionaloptimist.github.io/tags/cloud/</link><description>Recent content in cloud on DelusionalOptimist</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 16 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://delusionaloptimist.github.io/tags/cloud/index.xml" rel="self" type="application/rss+xml"/><item><title>Userspace Security Mechanisms: Ptrace</title><link>https://delusionaloptimist.github.io/posts/userspace-security-ptrace/</link><pubDate>Sat, 16 Sep 2023 00:00:00 +0000</pubDate><guid>https://delusionaloptimist.github.io/posts/userspace-security-ptrace/</guid><description>Introduction There are several mechanisms for protecting applications at runtime. However, what to use and how effective will it be is subject to the application&amp;rsquo;s environment.
eBPF is a powerful mechanism which is being used commonly for security usecases these days. It provides deep observability by directly instrumenting the OS kernel. However, a side effect of this is the need of privileged access of some form in the system.
It is also noteworthy that cloud platforms recently have started to abstract away infrastructure, hiding many configuration knobs, so that users can have a more smoother and secure experience.</description></item></channel></rss>